[{"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\hooks\\useFetch.tsx":"1","C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\screens\\Home.tsx":"2","C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\App.tsx":"3","C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\components\\Header.tsx":"4","C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\utils\\LangContext.tsx":"5"},{"size":2830,"mtime":1608734393257,"results":"6","hashOfConfig":"7"},{"size":2543,"mtime":1608734844956,"results":"8","hashOfConfig":"7"},{"size":258,"mtime":1608734793321,"results":"9","hashOfConfig":"7"},{"size":1597,"mtime":1608736202013,"results":"10","hashOfConfig":"7"},{"size":723,"mtime":1608688603200,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19xmhj2",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\hooks\\useFetch.tsx",[],"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\screens\\Home.tsx",["24"],"import {\n  Collapse,\n  LinearProgress,\n  List,\n  ListItem,\n  ListItemText,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport Header from \"../components/Header\";\nimport useFetch from \"../hooks/useFetch\";\n\ninterface ListResponse {\n  count: number;\n  next: string | null;\n  previous: string | null;\n  results: { name: string; url: string }[];\n}\n\nexport default () => {\n  const [page, setPage] = useState(1);\n  const [pokeList, loading, call] = useFetch<ListResponse>({\n    onInit: {\n      url: \"https://pokeapi.co/api/v2/ability/\",\n      params: { offset: 0, limit: 5 },\n    },\n  });\n\n  const [detail, loadingDetail, callDetail, cleanDetail] = useFetch();\n  console.log(detail);\n\n  const isLoading = useMemo(() => loading || loadingDetail, [\n    loading,\n    loadingDetail,\n  ]);\n\n  const classes = useClasses();\n  return (\n    <div>\n      <Header goBack={!!detail} onBack={() => cleanDetail()} />\n      <main className={classes.content}>\n        <Collapse in={isLoading} timeout=\"auto\" unmountOnExit>\n          <LinearProgress />\n        </Collapse>\n        <Collapse in={!detail}>\n          <Paper>\n            <List component=\"nav\" aria-label=\"poke list\">\n              {pokeList?.results.map(({ name, url }) => (\n                <ListItem\n                  button\n                  divider\n                  key={url}\n                  onClick={() => {\n                    callDetail({ url });\n                  }}\n                >\n                  <ListItemText primary={name} />\n                </ListItem>\n              ))}\n            </List>\n            {pokeList?.count && (\n              <div className={classes.pagination}>\n                <Pagination\n                  count={Math.floor(pokeList?.count / 5)}\n                  size=\"small\"\n                  page={page}\n                  variant=\"outlined\"\n                  siblingCount={1}\n                  boundaryCount={1}\n                  onChange={(e, number) => {\n                    setPage(number);\n                    call({ params: { limit: 5, offset: (number - 1) * 5 } });\n                  }}\n                />\n              </div>\n            )}\n          </Paper>\n        </Collapse>\n      </main>\n    </div>\n  );\n};\n\nconst useClasses = makeStyles((theme) => ({\n  content: {\n    padding: theme.spacing(2),\n  },\n  pagination: {\n    padding: theme.spacing(1.5),\n    flexDirection: \"column\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n",["25","26"],"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\App.tsx",[],"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\components\\Header.tsx",[],"C:\\Users\\Tano\\Proyectos\\Gilada\\fravega\\src\\utils\\LangContext.tsx",[],{"ruleId":"27","severity":1,"message":"28","line":11,"column":17,"nodeType":"29","messageId":"30","endLine":11,"endColumn":26},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-global-assign","no-unsafe-negation"]